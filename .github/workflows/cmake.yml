name: CMake

on:
  push:
    branches: [ master devel ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
      name: Checkout
      with:
        fetch-depth: 0
        lfs: true #enable LFS

    - name: Checkout LFS objects
      run: git lfs checkout # actually checkout stuff

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(git describe --long --dirty=X)
      shell: bash

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -Bbuild -S. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DOC=ON

    - name: Build Doxygen docs
      run: cmake --build build -t doc

    - name: Build
      # Build your program with the given configuration
      run: cmake --build build --config ${{env.BUILD_TYPE}} -t package
    
    - name: Test
      run: ctest --test-dir build --rerun-failed --output-on-failure -R grab

    - uses: actions/upload-artifact@v2
      name: Upload Artifact
      # Create a single artifact (zip folder) with binaries for 3 OSs
      with:
        name: mightex1304-${{env.BUILD_TYPE}}-${{steps.get_version.outputs.VERSION}}
        path: |
          packages/*
          !packages/_CPack_Packages
    
